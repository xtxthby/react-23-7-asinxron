import { createReducer, combineReducers } from '@reduxjs/toolkit';
import { fetchBooks } from './booksOperations';
//  entities –æ—Ç—Ä–∏–º—É—î  —Å—Ç–∞–Ω –Ω–∞ –ø–æ—á–∞—Ç–∫—É –ø—É—Å—Ç–∏–π –º–∞—Å–∏–≤
const entities = createReducer([], {
  // —è–∫—â–æ –ø—Ä–∏–π—à–æ–≤ Succes —Ç–æ –∫–ª–∞–¥–µ–º–æ payload –≤ –º–∞—Å–∏–≤ —è–∫–∏–π –ø–æ—Ä–æ–∂–Ω—ñ–π
  // [booksActions.fetchBooksSuccess]: (_, action) => action.payload,
  // —ñ–¥–µ –∑–∞–ø—Ä–æ—Å fulfilled
  [fetchBooks.fulfilled]: (_, action) => action.payload,
});

// —è–∫—â–æ –º–∏ –∑—Ä–æ–±–∏–º–æ –∑–∞–ø—Ä–æ—Å
// fetchBooks.fulfilled(5)
// —Ç–æ –æ—Ç—Ä–∏–º–∞—î–º–æ 
// {
//    type; 'books/fetchBooks/fulfilled',
//    payload: 5,
// }

const isLoading = createReducer(false, {
  // —è–∫—â–æ —ñ–¥–µ –∑–∞–≥—Ä—É–∑–∫–∞ —Ç–æ —Å—Ç–∞–≤–∏–º–æ true
  [fetchBooks.pending]: () => true,
  // –¥–∞–ª—ñ –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫—ñ–Ω—á–∏–ª–∞—Å—è
  [fetchBooks.fulfilled]: () => false,
  // –ø—Ä–∏ error —Ç–µ–∂
  [fetchBooks.rejected]: () => false,
});

const error = createReducer(null, {
  // —Ç—É—Ç –ø–æ–º–∏–ª–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É
  [fetchBooks.rejected]: (_, action) => action.payload,
  // —Ç—É—Ç —Å–∫–∏–¥–∞—î–º–æ –ø–æ–º–∏–ª–∫—É –≤ null
  [fetchBooks.pending]: () => null,
});

//–∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é combineReducers —Ç—É—Ç –ø–µ—Ä–µ–¥–∞—î–º–æ —É—Å—ñ —Ä–µ–¥—é—Å–µ—Ä–∏
export default combineReducers({
  entities,
  isLoading,
  error,
});

// üî• –ò–°–ü–û–õ–¨–ó–£–ï–¢ IMMER –î–õ–Ø –ú–£–¢–ê–¶–ò–ò –ö–û–ü–ò–ò –°–û–°–¢–û–Ø–ù–ò–Ø
// const booksSlice = createSlice({
//   name: 'books',
//   initialState: { entities: [], isLoading: false, error: null },
//   extraReducers: {
//     [fetchBooks.fulfilled]: (state, { payload }) => (state.entities = payload),
//     [fetchBooks.pending]: state => (state.isLoading = true),
//   },
// });
//  —â–æ —Ç–∞–º –ø—ñ–¥ –∫–∞–ø–æ—Ç–æ–º
// console.log(booksSlice);

// export default booksSlice.reducer;


//  createSlice 
// =================================================
// import { createSlice } from '@reduxjs/toolkit'

// const initialState = {
//   value: 0
// } 

// const counterSlice = createSlice({
//   // —ñ–º—è —Ä–µ–¥—é—Å–µ—Ä–∞ 
//   name: 'counter',
//   // –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω
//   initialState,
//   // —Ç—É—Ç –ø—ñ–¥—Ä–µ–¥—é—Å–µ—Ä–∏
//   reducers: {
//     increment(state) {
//       state.value++
//     },
//     decrement(state) {
//       state.value--
//     },
//     incrementByAmount(state, action) {
//       state.value += action.payload
//     },
//   },
// })

// export const { increment, decrement, incrementByAmount } = counterSlice.actions
// export default counterSlice.reducer


// —Ä–µ–¥—é—Å–µ—Ä —Ü–µ –Ω–∞ –∑–∞—Ä–∞–∑ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –∑ —Ç—Ä—å–æ–º–∞ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏

// {
//   counter: {
//     increment,
//     decrement,
//     incrementByAmount
//   }
// }





//  createSlice 
// =========================================================






// const booksSlice = createSlice({
//   // —ñ–º—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ —Å—Ç–µ–π—Ç—É
//   name: 'books',
//   // –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω
//   initialState: { entities: [], isLoading: false, error: null },
//   // —Ç–∞–∫ —è–∫ –≤ –Ω–∞—Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π –∑–∞–ø—Ä–æ—Å —Ç–æ –º–∏ 
//   // –ø—Ä–µ–¥–∞–º–æ extraReducers: —Ü–µ –∫–∞—Å—Ç–æ–º–Ω—ñ —Ä–µ–¥—é—Å–µ—Ä–∏ —è–∫—ñ –∑–∞ –Ω–∞—Å –Ω–µ 
//   // –±—É–¥—É—Ç—å –≥–µ–Ω–µ—Ä–∏—Ç—å
//   extraReducers: {
//     [fetchBooks.fulfilled]: (state, action) => {
//       // –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—î–∫—Ç —Å—Ç–∞–Ω—É –¥–µ —Ä–æ–∑–ø–∏–ª—é—î–º–æ
//       // —Å—Ç–µ–π—Ç
//       return {
//         ...state,
//         // —è–∫—â–æ –¥–æ–¥–∞—î–º —Ç–æ —Ç–∞–∫
//         // [...state.entities, ...action.payload]
//         //  –∞ —Ç–∞–∫ –ø–µ—Ä–µ–∑–∞–ø–∏—à–µ–º–æ
//         entities: action.payload,
//       };
//     },
//     [fetchBooks.pending]: state => {
//       return {
//         ...state,
//         isLoading: true,
//       }
//     } 
//   },
// })

// –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è —ã–Ω–Ω–µ—Ä–æ–º –¥–∏–≤–∏—Ç—å –∑ –≤–µ—Ä—Ö—É.



